name: "Bump version in gradle.properties"
description: "Increments the patch version of the version found in gradle.properties, appends -SNAPSHOT"
inputs:
  target_branch:
    default: 'main'
    description: "Branch on which the version bump is to be done."
    required: false
  base_version:
    description: "The current version, which is to be bumped to the next snapshot"
    required: false

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
    - name: read version from gradle.properties
      shell: bash
      run: |
        # Prepare git env
        git config user.name "eclipse-edc-bot"
        git config user.email "edc-bot@eclipse.org"

        # checkout target
        git fetch origin
        git checkout ${{ inputs.target_branch }}

        # use current version from input
        baseVersion=${{ inputs.base_version }}
        existingVersion=$(grep "version" gradle.properties  | awk -F= '{print $2}')
        
        # read the major, minor, and patch components, consume -SNAPSHOT
        IFS=.- read -r RELEASE_VERSION_MAJOR RELEASE_VERSION_MINOR RELEASE_VERSION_PATCH SNAPSHOT<<<"$baseVersion"
        INC=0
        # Compute new snapshot version, do not increment snapshot on non-final releases, e.g. -rc1
        if [ -z $SNAPSHOT ]; then
          echo "$baseVersion is a final release version, increase patch for next snapshot"
          INC=1
        else
          echo "$baseVersion is not a final release version (contains \"$SNAPSHOT\"), will not increase patch"
        fi

        # construct the new version
        newVersion="$RELEASE_VERSION_MAJOR.$RELEASE_VERSION_MINOR.$((RELEASE_VERSION_PATCH+$INC))"-SNAPSHOT

        # replace every occurrence of =$baseVersion with =$newVersion
        grep -rlz "$existingVersion" . --exclude=\*.{sh,bin} | xargs sed -i "s/$existingVersion/$newVersion/g"

        echo "Bumped the version from $baseVersion to $newVersion"

        # Commit and push to the desired branch, defaults to 'main'
        git add .
        git commit --message "Bump version from $baseVersion to $newVersion [skip ci]"

        git push origin ${{ inputs.target_branch }}
