[metadata]
format.version = "1.1"

[versions]
awaitility = "4.2.1"
aws = "2.26.27"
bouncyCastle-jdk18on = "1.78.1"
edc = "0.8.2-SNAPSHOT"
failsafe = "3.3.1"
junit = "5.11.0"
restAssured = "5.4.0"
testcontainers = "1.20.1"


[libraries]
awaitility = { module = "org.awaitility:awaitility", version.ref = "awaitility" }
assertj = { module = "org.assertj:assertj-core", version = "3.26.0" }
bouncyCastle-bcpkixJdk18on = { module = "org.bouncycastle:bcpkix-jdk18on", version.ref = "bouncyCastle-jdk18on" }
bouncyCastle-bcprovJdk18on = { module = "org.bouncycastle:bcprov-jdk18on", version.ref = "bouncyCastle-jdk18on" }
edc-api-management = { module = "org.eclipse.edc:management-api", version.ref = "edc" }
edc-api-management-config = { module = "org.eclipse.edc:management-api-configuration", version.ref = "edc" }
edc-api-observability = { module = "org.eclipse.edc:api-observability", version.ref = "edc" }
edc-boot = { module = "org.eclipse.edc:boot", version.ref = "edc" }
edc-config-filesystem = { module = "org.eclipse.edc:configuration-filesystem", version.ref = "edc" }
edc-vault-filesystem = { module = "org.eclipse.edc:vault-filesystem", version.ref = "edc" }
edc-core-connector = { module = "org.eclipse.edc:connector-core", version.ref = "edc" }
edc-core-controlplane = { module = "org.eclipse.edc:control-plane-core", version.ref = "edc" }
edc-core-dataplane = { module = "org.eclipse.edc:data-plane-core", version.ref = "edc" }
edc-core-dataPlane-selector = { module = "org.eclipse.edc:data-plane-selector-core", version.ref = "edc" }
edc-core-dataPlane-util = { module = "org.eclipse.edc:data-plane-util", version.ref = "edc" }
edc-core-catalog = { module = "org.eclipse.edc:catalog-core", version.ref = "edc" }
edc-core-jersey = { module = "org.eclipse.edc:jersey-core", version.ref = "edc" }
edc-core-jetty = { module = "org.eclipse.edc:jetty-core", version.ref = "edc" }
edc-core-jwt = { module = "org.eclipse.edc:jwt-core", version.ref = "edc" }
edc-dpf-selector-client = { module = "org.eclipse.edc:data-plane-selector-client", version.ref = "edc" }
edc-dpf-selector-core = { module = "org.eclipse.edc:data-plane-selector-core", version.ref = "edc" }
edc-dpf-selector-spi = { module = "org.eclipse.edc:data-plane-selector-spi", version.ref = "edc" }
edc-dpf-selector-api = { module = "org.eclipse.edc:data-plane-selector-api", version.ref = "edc" }
edc-dpf-client = { module = "org.eclipse.edc:data-plane-client", version.ref = "edc" }
edc-dpf-http = { module = "org.eclipse.edc:data-plane-http", version.ref = "edc" }
edc-dpf-http-oauth2 = { module = "org.eclipse.edc:data-plane-http-oauth2", version.ref = "edc" }
edc-dpf-api = { module = "org.eclipse.edc:data-plane-api", version.ref = "edc" }
edc-ext-azure-cosmos-core = { module = "org.eclipse.edc:azure-cosmos-core", version.ref = "edc" }
edc-ext-azure-test = { module = "org.eclipse.edc:azure-test", version.ref = "edc" }
edc-ext-http = { module = "org.eclipse.edc:http", version.ref = "edc" }
edc-ext-boot = { module = "org.eclipse.edc:boot", version.ref = "edc" }
edc-spi-controlplane = { module = "org.eclipse.edc:control-plane-spi", version.ref = "edc" }
edc-iam-mock = { module = "org.eclipse.edc:iam-mock", version.ref = "edc" }
edc-ih-spi-store = { module = "org.eclipse.edc:identity-hub-store-spi", version.ref = "edc" }
edc-dsp = { module = "org.eclipse.edc:dsp", version.ref = "edc" }
edc-junit = { module = "org.eclipse.edc:junit", version.ref = "edc" }
edc-provision-http = { module = "org.eclipse.edc:provision-http", version.ref = "edc" }
edc-rs-spi-store = { module = "org.eclipse.edc:registration-service-store-spi", version.ref = "edc" }
edc-spi-catalog = { module = "org.eclipse.edc:catalog-spi", version.ref = "edc" }
edc-spi-contract = { module = "org.eclipse.edc:contract-spi", version.ref = "edc" }
edc-spi-policy = { module = "org.eclipse.edc:policy-spi", version.ref = "edc" }
edc-spi-core = { module = "org.eclipse.edc:core-spi", version.ref = "edc" }
edc-spi-transfer = { module = "org.eclipse.edc:transfer-spi", version.ref = "edc" }
edc-spi-validation = { module = "org.eclipse.edc:validator-spi", version.ref = "edc" }
edc-spi-web = { module = "org.eclipse.edc:web-spi", version.ref = "edc" }
edc-spi-jsonld = { module = "org.eclipse.edc:json-ld-spi", version.ref = "edc" }
edc-spi-dataplane = { module = "org.eclipse.edc:data-plane-spi", version.ref = "edc" }
edc-transfer-dataplane = { module = "org.eclipse.edc:transfer-data-plane", version.ref = "edc" }
edc-transfer-httppull-receiver = { module = "org.eclipse.edc:transfer-pull-http-receiver", version.ref = "edc" }
edc-transfer-httppull-receiver-dynamic = { module = "org.eclipse.edc:transfer-pull-http-dynamic-receiver", version.ref = "edc" }
edc-lib-util = { module = "org.eclipse.edc:util-lib", version.ref = "edc" }
edc-lib-http = { module = "org.eclipse.edc:http-lib", version.ref = "edc" }

# third-party deps
failsafe-core = { module = "dev.failsafe:failsafe", version.ref = "failsafe" }
restAssured = { module = "io.rest-assured:rest-assured", version.ref = "restAssured" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }

# AWS dependencies
aws-sts = { module = "software.amazon.awssdk:sts", version.ref = "aws" }
aws-iam = { module = "software.amazon.awssdk:iam", version.ref = "aws" }
aws-s3 = { module = "software.amazon.awssdk:s3", version.ref = "aws" }
aws-secretsmanager = { module = "software.amazon.awssdk:secretsmanager", version.ref = "aws" }

[bundles]

[plugins]
shadow = { id = "com.github.johnrengelman.shadow", version = "8.1.1" }
